package homework07;import java.time.LocalDate;import java.util.Objects;public class DiscountProduct extends Product {    private double discount;    private LocalDate discountEndDate;    public DiscountProduct(String name, double price, double discount, LocalDate discountEndDate) {        super(name, price);        setDiscount(discount);        setDiscountEndDate(discountEndDate);    }    public double getDiscount() {        return discount;    }    public void setDiscount(double discount) {        if (discount <= 0 || discount >= 100) {            throw new IllegalArgumentException("Скидка должна быть в диапазоне (0, 100)");        }        this.discount = discount;    }    public LocalDate getDiscountEndDate() {        return discountEndDate;    }    public void setDiscountEndDate(LocalDate discountEndDate) {        if (discountEndDate == null || discountEndDate.isBefore(LocalDate.now())) {            throw new IllegalArgumentException("Дата окончания скидки должна быть в будущем");        }        this.discountEndDate = discountEndDate;    }    @Override    public double getPrice() {        if (LocalDate.now().isAfter(discountEndDate)) {            return super.getPrice(); // Скидка закончилась        }        return super.getPrice() * (1 - discount / 100);    }    @Override    public String toString() {        if (LocalDate.now().isAfter(discountEndDate)) {            return super.toString();        }        return String.format("%s (%.2f руб.) [СКИДКА %.0f%% до %s]",               getName(), getPrice(), discount, discountEndDate);    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (o == null || getClass() != o.getClass()) return false;        if (!super.equals(o)) return false;        DiscountProduct that = (DiscountProduct) o;        return Double.compare(that.discount, discount) == 0 &&                Objects.equals(discountEndDate, that.discountEndDate);    }    @Override    public int hashCode() {        return Objects.hash(super.hashCode(), discount, discountEndDate);    }}